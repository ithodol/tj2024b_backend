[객체]
	- 의사나 행위가 미치는 대상
		- 사람, 자동차, 건물 등
		- 주문, 생산, 관리 등
	- 객(손님)체
[객체지향 프로그래밍]
	- 어떤 대상(객체)을 가지고 프로그래밍한다
	
[클래스]
	- 객체의 속성과 기능을 코드로 구현한 것
		- 속성 : 대상의 본질적인 특징/성질/특성	멤버변수
		- 기능 : 대상의 작동/행위/이벤트		메서드(멤버함수)
	- 클래스 형태
		class 클래스명{ 멤버변수; 메서드; }
	- *클래스 이름 짓는 규칙 : 대문자로 시작
	- *객체를 만들기위한 객체의 일종의 틀(설계도)
	- 클래스 사용처 : 1. 객체 설계도 클래스 2. main 함수를 갖고 실행 클래스
		
	(예시) p.128
		1. 학생
			속성(멤버변수) : 학번, 이름, 학년, 사는곳 ...
			- 클래스 코드 표현
			public class Student{
				int studentID;
				String studentName;
				int grade;
				String address;
			}
			
		2. 자동차
			속성(멤버변수) : 제조사, 차량번호, 현재속도, 배기량, 엔진상태 ...
			- 클래스 코드 표현
			public class Car{
				String 제조사;
				String 차량번호;
				int 현재속도;
			}
			
		3. 주문
			속성(멤버변수) : 주문번호, 제품명, 수량, 주문일자 ...
			- 클래스 코드 표현
			public class Order{
				String 주문번호;
				String 제품명;
				int 수량;
			}
		
[배열]
	1. 정의 : 자료형/타입이 같이 자료 여러개를 한 번에 관리하는 자료구조.
	2. 선언 : 
		타입[] 변수명 = new 타입[총길이];
		- 타입 : 배열에 저장할 자료들의 공통 타입
		- new : 객체/배열을 생성하기 위한 키워드/예약어
		- [길이] : 배열에 저장할 자료의 최대 개수
			**주의할 점 : 선언된 이후 배열의 길이는 변경 불가능
	3. 배열 초기화
		(1) 타입[] 변수명 = new 타입[]{ 값1, 값2, 값3 }
		(2) 타입[] 변수명 = { 값1, 값2, 값3 };
		(3) 타입[] 변수명;
			변수명 = new 타입[]{ 값1, 값2, 값3 };
			
			
	4. 배열 요소의 기본값 : 배열 요소의 초기값이 없을 때 자동으로 들어가는 값
		정수 = 0, 실수 = 0.0, 객체 = null, 논리 = false
		
		
	5. 배열 사용 : [ ] 대괄호
		- 인덱스 : 배열내 요소 값이 저장된 순서번호, 0부터 시작
		1. 배열 전체 호출
			배열변수명						* 배열 주소(가상메모리
			Arrays.toString(배열변수명)		* 배열 전체 요소
		2. 배열 특정 요소 값 호출
			배열변수명[인덱스]
	
		
	6. 배열 길이 속성
		- 배열변수명.length
		
		
	7. 배열과 반복문의 관계
		- 배열은 인덱스라는 저장순서 번호 규칙이 존재한다
		- 인덱스와의 규칙 : 0번부터 1식 증가하면서 마지막요소까지 번호를 부여한다
			- 배열의 마지막 인덱스 구하 : 배열변수명.length -1
		
		* 배열의 전체 요소를 순회(요소 하나씩 조회)
		- for(int index = 0; index <= 배열변수명.length -1; index++){
			배열변수명[index]
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		