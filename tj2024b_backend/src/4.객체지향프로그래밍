[객체]
	- 의사나 행위가 미치는 대상
		- 사람, 자동차, 건물 등
		- 주문, 생산, 관리 등
	- 객(손님)체
[객체지향 프로그래밍]
	- 어떤 대상(객체)을 가지고 프로그래밍한다
	
[클래스]
	- 객체의 속성과 기능을 코드로 구현한 것
		- 속성 : 대상의 본질적인 특징/성질/특성	멤버변수
		- 기능 : 대상의 작동/행위/이벤트		메서드(멤버함수)
	- 클래스 형태
		class 클래스명{ 멤버변수; 메서드; }
	- *클래스 이름 짓는 규칙 : 대문자로 시작
	- *객체를 만들기위한 객체의 일종의 틀(설계도)
	- 클래스 사용처 : 1. 객체 설계도 클래스 2. main 함수를 갖고 실행 클래스
		
	(예시) p.128
		1. 학생
			속성(멤버변수) : 학번, 이름, 학년, 사는곳 ...
			- 클래스 코드 표현
			public class Student{
				int studentID;
				String studentName;
				int grade;
				String address;
			}
			
		2. 자동차
			속성(멤버변수) : 제조사, 차량번호, 현재속도, 배기량, 엔진상태 ...
			- 클래스 코드 표현
			public class Car{
				String 제조사;
				String 차량번호;
				int 현재속도;
			}
			
		3. 주문
			속성(멤버변수) : 주문번호, 제품명, 수량, 주문일자 ...
			- 클래스 코드 표현
			public class Order{
				String 주문번호;
				String 제품명;
				int 수량;
			}
		
[배열]
	1. 정의 : 자료형/타입이 같이 자료 여러개를 한 번에 관리하는 자료구조.
	2. 선언 : 
		타입[] 변수명 = new 타입[총길이];
		- 타입 : 배열에 저장할 자료들의 공통 타입
		- new : 객체/배열을 생성하기 위한 키워드/예약어
		- [길이] : 배열에 저장할 자료의 최대 개수
			**주의할 점 : 선언된 이후 배열의 길이는 변경 불가능
	3. 배열 초기화
		(1) 타입[] 변수명 = new 타입[]{ 값1, 값2, 값3 }
		(2) 타입[] 변수명 = { 값1, 값2, 값3 };
		(3) 타입[] 변수명;
			변수명 = new 타입[]{ 값1, 값2, 값3 };
			
			
	4. 배열 요소의 기본값 : 배열 요소의 초기값이 없을 때 자동으로 들어가는 값
		정수 = 0, 실수 = 0.0, 객체 = null, 논리 = false
		
		
	5. 배열 사용 : [ ] 대괄호
		- 인덱스 : 배열내 요소 값이 저장된 순서번호, 0부터 시작
		1. 배열 전체 호출
			배열변수명						* 배열 주소(가상메모리
			Arrays.toString(배열변수명)		* 배열 전체 요소
		2. 배열 특정 요소 값 호출
			배열변수명[인덱스]
	
		
	6. 배열 길이 속성
		- 배열변수명.length
		
		
	7. 배열과 반복문의 관계
		- 배열은 인덱스라는 저장순서 번호 규칙이 존재한다
		- 인덱스와의 규칙 : 0번부터 1식 증가하면서 마지막요소까지 번호를 부여한다
			- 배열의 마지막 인덱스 구하 : 배열변수명.length -1
		
		* 배열의 전체 요소를 순회(요소 하나씩 조회)
		- for(int index = 0; index <= 배열변수명.length -1; index++){
			배열변수명[index]
		}
		
		
		
[메소드] 멤버함수 또는 메소드
	1. 정의 : 하나의 기능을 수행하는 일련의 코드 / *여러코드(명령어;)들을 묶음을 저장하는 역할
	2. 함수 정의, 함수 만들기
		반환타입 함수명(타입 매개변수1, 타입 매개변수2){
			실행코드;
			return 반환값|반환값이 없으면 생략 가능 
		} 
		
		(1) 함수이름
				- 변수명과 동일하게 지정(카멜표기법 권장)
		(2) 매개변수
				- 함수의 입력으로 받는 변수
				- *매개변수는 없을 수도 있음
				- 함수 호출/사용시 인수값을 중매(연결)해서 대입받는 변수
				- 인수값의 타입과 매개변수의 타입은 일치해야 한다
		(3) 반환값
				- 함수를 수행한 후 결과로 되돌려주는 값	*반환값도 없을 수도 있음 : 반환타입 void
				- return 역할
					- 반환값을 되돌려줌
					- 함수 종료
					- 반환값의 타입과 반환타입은 일치해야 한다
					
* 참고
[자바의 이름 짓기 규악]
	- 패키지/폴더명 : 소문자
	- 클래스명 : 첫글자를 대문자
	- 변수/함수명 : 첫글자를 소문자로 시작, 중간에 새 단어의 첫글자는 대문자(카멜표기법)
	- 객체명/배열명 : 존재하지 않음
		타입 변수명 = 객체		*관례적으로 객체를 참조하는 변수는 객체변수라고 표현함
		타입[] 변수명 = 배열		*관례적으로 배열을 참조하는 변수는 배열변수라고 표현함
	
		
[용어 정리]
	1. 객체 Object / 물리적, 논리적 개념을 가진 대상/물체
		* 나를 제외한 어떠한 고유한성질 과 행위 가진 대상* 
		- 객체 지향 프로그램의 대상, 생성된 인스턴스
		
	2. 클래스 class / 대상,물체 분류
		* 자바에서 객체 만들기 위해서 설계한 코드*
		- 객체를 프로그래밍하기 위해 코드로 만든 상태
		
	3. 인스턴스 instance / 대상,물체를 발의
		* new연산자로 만들어진 객체*
		- 클래스가 메모리에 생성된 상태
		
	4. 멤버변수 / 특정한 곳에 구성된 변수
		* 인스턴스(객체)내 할당된 변수 *
		- 클래스의 속성, 특성
		
		
	5. 메소드 / 특정한 곳에 구성된 함수
		* 인스턴스(객체)가 사용하는 함수 *
		- 멤머변수를 이용하여 클래스의 기능을 구현
		
	6. 참조변수 reference / 견주어 살펴보다
		* 인스턴스(객체)의 위치(주소)를 갖는 변수 
		- 메모리에 생선된 인스턴스를 가리키는 변수
		
	7. 참조값 reference / 값
		* 인스턴스(객체)의 위치*
		- 생성된 인스턴스의 메모리 주소값
		
		
		
		
		
		
		
		
		
		
		
		
		