[변수]
	- 변하는 수 
	- 값을 넣을 수 있는 빈 그릇과 같습니다.
	1. 변수 형태 
		자료형 변수명 = 리터럴;
	2. 변수 선언 
		1. 선언 : 자료형 변수명;
		2. 초기화 : 자료형 변수명 = 리터럴;
	3. 변수명 주의할점
		1. 숫자로 시작 불가능하다.
		2. 특수문자 _ 와 $ 사용 하고 띄어쓰기 불가능하다
		3. 키워드(예약어) : if for int 등등 불가능하다.
		* 카멜표기법 : 소문자로 시작하고 두번째 단어는 첫글자를 대문자 한다.
		numberofStudent -> numberOfStudent
	4. 변수의 값 호출
		변수명
	5. 변수의 값 수정
		변수명 = 새로운 값
[리터럴]
	- 데이터 그 자체, 카보드로부터 입력한 자료
	- 자바 리터럴 : 논리boolean, 문자char, 정수int, 실수double
[자료형]
	1. 목적 : 타입의 저장범위를 고려하여 저장할 데이터를 적절하게 선택하여 사용하므로 효율성을 높일 수 있다.
	  - 자바 기본 타입 , 8가지. (+String 클래스타입)
	  [논리]
	  		boolean		1바이트	true 혹은 false
	  
	  
	  [문자]
	  		char		2바이트	유니코도, 작은따옴표로 감싼 문자		'A'
	  	객체 (X)String	n바이트	문자열클래스, 큰따옴표로 감싼 문자열	"ABC"
	  
	  
	  [정수]
	  		byte		1바이트		-128 ~ +127 저장 
	  		short		2바이트		+-3만정도 저장
	  		int			4바이트		+-21억정도 저장 	리터럴정수(키보드로 입력한 정수), 정수 중에 기본 타입(모두 int)
	  		long		8바이트		+-21억이상 정도	리터럴 뒤에 L을 붙이면 저장 가능(리터럴은 int이므로 long에 대입 불가)
	  
	  
	  [실수, 부동 소수점]
	  		float		4바이트		소수점 8자리 표현. 실수리터럴 뒤에 F붙이기
			double		8바이트		소수점 17자리 표현. 실수리터럴 실수 중에 기본 타입
	
		** 왜 타입을 여러가지로 구분해서 범위에 맞게 사용해야 하는가?
			메모리를 효율적으로 적적하게 선택하여 사용하기 위함
			박스는 큰데 들어있는 데이터가 적으면 공간 낭비
			
	[부동 소수점]
	0과 1사이의 실수는 끝없는 무한대 표현 가능하므로, 컴퓨터는 한계를 만들었다.
		- 지수부 : 숫자의 크기를 조정하는 역할 ex) 몇 승
		- 가수부 : 숫자의 유효 자릿수를 표현 ex) 숫자 자체
		float : 부호1비트, 지수부 8비트, 가수부 23비트
		double : 부호1비트, 지수부 11비트, 가수부 52비트
			ex) - 6.25
				1. 2진수로 표현 					: -110.01 
				2. 부호 : 0(양수) 1(음수)			: 1
			1000000
				가수 : 1, 지수 : 6 (10을 6번 곱해야함) 1.0*10^6
		- 실제 연산이 중요한 부분, 업무에서는 실수타입 사용하는데 한계(오차)가 있다. 해결법 : 라이브러리 BigDecimal 또는 문자열 처리
	[ ]
		10 -> 1000000 : 10*5  *10
		1000000 -> 10.00000 : /10
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	 

